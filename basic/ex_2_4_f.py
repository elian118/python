print(f"3 + 4 = {3 + 4}")

print(f"""
    1 + 2 = {1 + 2}
    2 + 3 = {2 + 3}
    3 + 4 = {3 + 4}
""")

# f-문자열보다 format() 함수 사용이 더 좋은 경우 
# 1. 문자열 내용이 너무 많을 때
name = "구름"
age = 7
print("""
    문자열이 너무 긴 상황에서
    데이터 {}을/를 출력해야 하는 경우가 있습니다.

    이때 f-문자열을 사용하면
    어떤 위치에 어떤 데이터가 {}가 출력되는지 확인하기 위해서
    문자열 전체를 읽어야 하는 문제가 있습니다.
    이러한 경우 format() 함수를 사용하는 것이 편리합니다.
    문자열이 아무리 길어도 다음 줄만 보면
    어떤 데이터를 출력하는지 쉽게 알 수 있습니다.
""".format(name, age))

# 2. 데이터를 배열에 담아 사용할 때
data = ['별', 2, 'M', '서울특별시 강서구', 'Y']
print(f"""
    이름: {data[0]}
    나이: {data[1]}
    성별: {data[2]}
    주소: {data[3]}
    중성화 여부: {data[4]}
""")

print("""
    이름: {}
    나이: {}
    성별: {}
    주소: {}
    중성화 여부: {}
""".format(*data)) # *는 전개연산자